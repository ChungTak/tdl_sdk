#pragma once
#include <bitset>


#include "model/base_model.hpp"

class MobileDetV2 final : public BaseModel {
 public:
  MobileDetV2(int num_classes);
  ~MobileDetV2();
  virtual int32_t outputParse(
      const std::vector<std::shared_ptr<BaseImage>> &images,
      std::vector<std::shared_ptr<ModelOutputInfo>>&out_datas) override;
  virtual int32_t onModelOpened() override;

 private:
  void decodeDetsForTensor(const int stride, std::vector<float> &dets);
  std::map<std::string, std::string> out_names_;

  // if output seperate featuremap
  std::vector<int> strides_;
  std::map<int, std::string> class_out_names_;
  std::map<int, std::string> bbox_out_names_;
  std::map<int, std::string> obj_max_names_;

  // stride -> anchor_box_num -> anchor_box
  std::vector<std::vector<std::vector<float>>> anchors_;
  int num_cls_ = 0;  // would parse automatically,should not be equal with
                     // num_box_channel_
};
